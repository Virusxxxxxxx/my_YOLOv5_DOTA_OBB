# parameters
nc: 2  # number of classes
depth_multiple: 0.67  # model depth multiple
width_multiple: 0.75  # layer channel multiple

# anchors coco:24,9, 37,12, 52,15 64,23, 81,19, 98,29 137,27, 199,41, 342,65
anchors:
  - [9,4, 3,9, 5,11]  # P2/4
  - [10,5, 18,8, 19,9]  # P3/8
  - [21,10, 25,11, 37,15]  # P4/16
  - [39,17, 49,19, 65,22]  # P5/32

# YOLOv5 backbone
backbone:
  # [from, number, module, args]
  [[-1, 1, Focus, [64, 3]],  # 0-P1/2
   [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4
   [-1, 3, BottleneckCSP, [128]],
   [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8
   [-1, 9, BottleneckCSP, [256]],
   [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16
   [-1, 9, BottleneckCSP, [512]],
   [-1, 1, Conv, [1024, 3, 2]],  # 7-P5/32
   [-1, 1, SPP, [1024, [5, 9, 13]]],
   [-1, 3, BottleneckCSP, [1024, False]],  # 9
   [-1, 1, SELayer, [1024, 4]], #10
  ]

# YOLOv5 head
head:
  [[-1, 1, Conv, [512, 1, 1]],  # 20*20
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 40*40
   [[-1, 6], 1, Concat, [1]],  # cat backbone P4  40*40
   [-1, 3, BottleneckCSP, [512, False]],  # 13  40*40

   [ -1, 1, Conv, [ 512, 1, 1 ] ], #40*40
   [ -1, 1, nn.Upsample, [ None, 2, 'nearest' ] ],  # 80*80
   [ [ -1, 4 ], 1, Concat, [ 1 ] ],  # cat backbone P3   80*80
   [ -1, 3, BottleneckCSP, [ 512, False ] ],  # 17 (P3/8-small)  80*80

   [-1, 1, Conv, [256, 1, 1]],  # 18  80*80
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 19  160*160
   [[-1, 2], 1, Concat, [1]],  # 20 cat backbone P2  160 * 160
   [-1, 3, BottleneckCSP, [256, False]],  # 21 160*160

   [ -1, 1, Conv, [ 256, 3, 2 ] ],  #22   80*80
   [ [ -1, 18 ], 1, Concat, [ 1 ] ], #23 80*80
   [ -1, 3, BottleneckCSP, [ 256, False ] ], #24 80*80

   [-1, 1, Conv, [256, 3, 2]],  # 25 40 * 40
   [[-1, 14], 1, Concat, [1]],  # 26 cat head P4 40*40
   [-1, 3, BottleneckCSP, [512, False]],  # 27 (P4/16-medium) 40*40

   [-1, 1, Conv, [512, 3, 2]], # 28  20*20
   [[-1, 10], 1, Concat, [1]],  # 29 cat head P5  20*20
   [-1, 3, BottleneckCSP, [1024, False]],  # 30 (P5/32-large)  20*20

   [[21, 24, 27, 30], 1, Detect, [nc, anchors]],  # Detect(P2, P3, P4, P5)
  ]
